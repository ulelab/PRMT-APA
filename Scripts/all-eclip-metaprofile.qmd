---
title: "all-clip-metaprofile"
author: "Charlotte Capitanchik"
format: html
editor: visual
---

## Libraries

```{r}
library(data.table)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(ggrepel)
library(GenomicRanges)
library(genomation)
library(parallel)
numCores <- detectCores()
```

## Load APA sites

```{r}
down_UTR_APA_proximal_sites = fread("../../../repos/PRMT-APA/motif_and_clip_analysis/LU99_timecourse/bed/proximal/sig_0_15_down_proximal_sites.bed") %>%
  dplyr::rename(
    chr = V1, 
    start = V2,
    end = V3, 
    strand = V6) %>%
  unique()

control_0_075_proximal_sites_0_075 = fread("../../../repos/PRMT-APA/motif_and_clip_analysis/LU99_timecourse/bed/proximal/control/control_0_075_proximal_sites_0_075_usage.bed") %>%
  dplyr::rename(
    chr = V1, 
    start = V2,
    end = V3, 
    strand = V6) %>%
  unique()

nrow(down_UTR_APA_proximal_sites)
nrow(control_0_075_proximal_sites_0_075)
```

```{r}
up_UTR_APA_distal_sites = fread("../../../repos/PRMT-APA/motif_and_clip_analysis/LU99_timecourse/bed/distal/sig_0_15_up_distal_sites.bed") %>%
  dplyr::rename(
    chr = V1, 
    start = V2,
    end = V3, 
    strand = V6) %>%
  unique()
control_0_075_distal_sites_0_075 = fread("../../../repos/PRMT-APA/motif_and_clip_analysis/LU99_timecourse/bed/distal/control/control_0_075_distal_sites_0_075_usage.bed") %>%
  dplyr::rename(
    chr = V1, 
    start = V2,
    end = V3, 
    strand = V6) %>%
  unique()

nrow(up_UTR_APA_distal_sites)
nrow(control_0_075_distal_sites_0_075)
```

```{r}
down_prox = makeGRangesFromDataFrame(down_UTR_APA_proximal_sites, keep.extra.columns = TRUE)
ctrl_prox = makeGRangesFromDataFrame(control_0_075_proximal_sites_0_075, keep.extra.columns = TRUE)
up_dist = makeGRangesFromDataFrame(up_UTR_APA_distal_sites, keep.extra.columns = TRUE)
ctrl_dist = makeGRangesFromDataFrame(control_0_075_distal_sites_0_075, keep.extra.columns = TRUE)

down_prox_600 = resize(down_prox, width = 600, fix = "center")
ctrl_prox_600 = resize(ctrl_prox, width = 600, fix = "center")
up_dist_600 = resize(up_dist, width = 600, fix = "center")
ctrl_dist_600 = resize(ctrl_dist, width = 600, fix = "center")
```

## Load CLIP data

```{r}
eclip_beds = list.files("/Users/capitac/data/clip/ALL-NEMO-CLIP/eCLIP-merged-xls/",full.names=TRUE)
eclip_names = basename(eclip_beds) %>% sub("-merged.*","",.)

bed_list = lapply(eclip_beds, function(file) {
    readBed(file)
})


length(bed_list)
length(eclip_names)


granges_only <- bed_list[sapply(bed_list, function(x) is(x, "GRanges"))]
# Number of GRanges objects in each group
n_groups <- 50
group_size <- ceiling(length(granges_only) / n_groups)
# Create groups
groups <- split(granges_only, ceiling(seq_along(granges_only) / group_size))

length(groups[[1]])
bl = list()
for (group in 1:length(groups)){
  bl[[group]] = GRangesList(groups[[group]])
}

eclip_bed_list = bl

saveRDS(bl, file="All-eclip-xls.RDS")
#eclip_bed_list <- readRDS("All-eclip-xls.RDS")
eclip_bed_list
eclip_names
```

```{r}
UTR_prox = genomation::ScoreMatrixList(target = eclip_bed_list, windows = down_prox_600,strand.aware=TRUE)
UTR_dist = genomation::ScoreMatrixList(target = iclip_bed_list, windows = up_dist_600,strand.aware=TRUE)
CTRL_prox = genomation::ScoreMatrixList(target = iclip_bed_list, windows = ctrl_prox_600,strand.aware=TRUE)
CTRL_dist = genomation::ScoreMatrixList(target = iclip_bed_list, windows = ctrl_dist_600,strand.aware=TRUE)
```

```{r}
make_meta_dataframe = function(df, condition, location, sample){
  new_df = df %>%
  pivot_longer(cols=everything()) %>%
  group_by(name) %>%
  mutate(mean=mean(value), 
         name=as.numeric(gsub("V","",name)),
         condition=condition,
         location=location,
         sample=sample) %>%
  select(name, mean, condition, location, sample) %>%
  unique()
  return(new_df)
}

combine_dataframes = function(scorematrixlist, condition, location, samplenames){
  df_list = list()
  for (i in 1:length(scorematrixlist)){
    df_list[[i]] = make_meta_dataframe(as.data.frame(scorematrixlist[[i]]), condition, location,samplenames[[i]])
  }
  for_plot=bind_rows(df_list)
  return(for_plot)
}
```

```{r}
apa_prox_df = combine_dataframes(UTR_prox,"apa","proximal",iclip_names)
apa_dist_df = combine_dataframes(UTR_dist,"apa","distal",iclip_names)
ctrl_prox_df = combine_dataframes(CTRL_prox,"ctrl","proximal",iclip_names)
ctrl_dist_df = combine_dataframes(CTRL_dist,"ctrl","distal",iclip_names)

final_to_plot = bind_rows(apa_prox_df, apa_dist_df,ctrl_prox_df,ctrl_dist_df) 

ggplot(final_to_plot,aes(x=name,y=mean,color=sample)) +
  stat_smooth(aes(y=mean, x=name), method = lm, formula = y ~ poly(x, 10)) + 
  facet_wrap(~condition+location) + theme_few() +
  geom_vline(xintercept=c(300), linetype="dotted") +
  scale_x_continuous(breaks = seq(0, 600, by = 100),   # X-axis breaks every 100 units
                     labels = seq(-300, 300, by = 100),  # X-axis labels every 100 units
                     limits = c(0, 600)) 
```
